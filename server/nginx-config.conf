server {
    listen 80;
    listen [::]:80;
    server_name thevvf.org www.thevvf.org;
    
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name thevvf.org www.thevvf.org;

    # SSL configuration - if using certbot, these will be managed automatically
    # ssl_certificate /etc/letsencrypt/live/thevvf.org/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/thevvf.org/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # IMPORTANT: API routes - proxy to Node.js backend
    location /api/ {
        # CRITICAL: Ensure accurate proxy_pass with trailing slash for proper URL resolution
        proxy_pass http://localhost:3001/api/;
        
        # Proxy headers for proper client information
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Don't buffer for better performance with API requests
        proxy_buffering off;
        
        # Increase timeouts for API requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable CORS headers for API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # Handle OPTIONS request for CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Make sure correct content type is preserved
        proxy_set_header Accept-Encoding "";
        
        # Debug logging for API requests
        error_log /var/log/nginx/api-debug.log debug;
        access_log /var/log/nginx/api-access.log;
    }

    # Serve static files
    location / {
        root /var/www/thevvf.org/app/dist;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Logs
    access_log /var/log/nginx/vvf-access.log;
    error_log /var/log/nginx/vvf-error.log;
}
